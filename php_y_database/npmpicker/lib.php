<?phpfunction GetFeeders($FeederData) {		LoadFeeder($FeederData);}function GetMenu($id_linea="",$turno="",$LineData) {	if(count($LineData)>0) {		foreach($LineData as $linea => $x) {			$offline = 'style="color: #ffffff;background-color: #d2322d;border-color: #ac2925;"';			$icon = 'glyphicon-ban-circle';			$active = "";			if($x['online']) {				$offline="";				$icon = "glyphicon-chevron-right";			} 			if($id_linea==$x['id_linea']) {				$active = " active";				$icon = "glyphicon-hand-right";			}						$count = $x['inestable'];			$count_mark = ""; 			if($count!="") {				$count_mark = '<span class="badge">'.$count.'</span>';			}						echo '<a href="?linea='.$x['id_linea'].'&turno='.$turno.'" class="list-group-item '.$active.'" '.$offline.'><span class="glyphicon '.$icon.'"></span> SMD-'.$x['id_linea'].' '.$count_mark.'</a>';		}	}}function LoadFeeder($data) {	foreach($data as $d) {		$id_stat = $d['id_stat'];		$last_id_data = $d['last_id_data'];				$maquina = $d['maquina'];		$modulo = $d['modulo'];		$tabla = $d['tabla'];		$feeder = $d['feeder'];		$format = $d['format'];		$total_pickup = $d['total_pickup'];		$total_error = $d['total_error'];		$rate = $d['rate'];		$status = $d['status'];		$rate_status = $d['rate_status'];				$horas_array = array();		$errores_array = array();		$inspecciones_array = array();		/* 		* Proceso datos de feeder.		* para luego convertirlos en objeto javascript		* y poderlos usar en grafico.		*/		foreach($d['data'] as $hora=>$r) {			$horas_array[] = "'".$hora."'";							$error = $r['error'];			if($r['ajuste']) {				$error = Mark_ajuste($error);			}			$errores_array[] = $error;						if($r['inspeccion']) {				$inspecciones_array[] = $error;			} else {				$inspecciones_array[] = 'null';				}		}				$error_obj = '['.join($errores_array,',').']';		$hora_obj = '['.join($horas_array,',').']';		$inspeccion_obj = '['.join($inspecciones_array,',').']';		// Funcion javascript lista.		echo "		loadFeeder('".$id_stat."','".$last_id_data."','".$format."',".$error_obj.",".$hora_obj.",".$inspeccion_obj.",'".$total_pickup."','".$rate."','".$total_error."','".$status."','".$rate_status."'); 		";	}}function Mark_ajuste($error) {	return '	{		y:'.$error.',  		marker: {			lineWidth : 3,			symbol: "circle",			fillColor: "#b2ddff",			lineColor: "#0090ff",			radius: 6		}	}	';}		/*	$LINEA_INESTABLE = array();	function getLineas($linea="") {			global $turno, $LINEA_INESTABLE;		$query = "						select 			s.id_linea,			IF(			(			select p.ping from `npmpicker`.`ping` p 			where 			p.id_linea = s.id_linea limit 1 			)			 >  			DATE_SUB(NOW() , INTERVAL 15 MINUTE),'online','error') as online ,			(			select p.ping from `npmpicker`.`ping` p 			where 			p.id_linea = s.id_linea limit 1			) ping			from npmpicker.stat s group by s.id_linea";		$sql = mysql_query($query);				if(mysql_num_rows($sql)>0) {			while($d = mysql_fetch_array($sql)) {				$offline = 'style="color: #ffffff;background-color: #d2322d;border-color: #ac2925;"';				$icon = 'glyphicon-ban-circle';				$active = "";				if($d['online']=="online") {					$offline="";					$icon = "glyphicon-chevron-right";				} 				if($linea==$d['id_linea']) {					$active = " active";					$icon = "glyphicon-hand-right";				}								$count = $LINEA_INESTABLE[$d['id_linea']];				$count_mark = ""; 				if($count!="") {					$count_mark = '<span class="badge">'.$count.'</span>';				}								echo '<a href="?linea='.$d['id_linea'].'&turno='.$turno.'" class="list-group-item '.$active.'" '.$offline.'><span class="glyphicon '.$icon.'"></span> SMD-'.$d['id_linea'].' '.$count_mark.'</a>';			}		}	}		function countFeedersInestables($turno="") {		global $LINEA_INESTABLE;		$query = "		SELECT 					COUNT(id_linea) as inestable,			id_linea			FROM npmpicker.stat				WHERE 				fecha = CURDATE()		AND 					turno = '".$turno."'		AND				estado = 'inestable'			group by id_linea		";		$sql = mysql_query($query);				if(mysql_num_rows($sql)>0) {				while($d = mysql_fetch_array($sql)) {				$LINEA_INESTABLE[$d['id_linea']] = $d['inestable'];			}		}	}	function getFeedersInestables($linea="",$turno="") {		$query = "		SELECT 		id,		id_linea,		maquina,		modulo,		tabla,		feeder,		turno,		count,		estado		FROM npmpicker.stat				WHERE 			id_linea = '".$linea."'		AND 			fecha = CURDATE()		AND 			turno = '".$turno."'		AND			estado = 'inestable'			";				$sql = mysql_query($query);		if(mysql_num_rows($sql)>0) {			while($d = mysql_fetch_array($sql)) {				$js = getFeederData(					$d['id'],					$d['id_linea'],					$d['maquina'],					$d['modulo'],					$d['tabla'],					$d['feeder']				);								echo $js['script'];			}		}		countFeedersInestables($turno);	}		function getFeederData($id_stat="",$id_linea="",$maquina="",$modulo="",$tabla="",$feeder="") {		$query = "		SELECT				id,			total_error, 			total_pickup,			DATE_FORMAT(hora, '%H:%i') as hora,			inspeccion,			ajuste,			concat(round(( (total_error * 100) / total_pickup),2)) AS  rate		FROM npmpicker.data 		WHERE			id_stat = '".$id_stat."'		ORDER BY id DESC		";				$FEED = array();		$existen_datas = false;				$sql = mysql_query($query);		if(mysql_num_rows($sql)>0) {			// Si existen DATAs, creo un array con toda la informacion y guardo el ultimo ID data agregado.			while($d = mysql_fetch_array($sql)) {							$id = $d['id'];				$error = $d['total_error'];				$pickups = $d['total_pickup'];				$hora = $d['hora'];				$rate = $d['rate'];								$inspeccion = $d['inspeccion'];	// Proceso				$ajuste = $d['ajuste'];	 // Tecnico								$format_maquina = $maquina.'-'.$modulo.' ';				$format_feeder  = 'T'.$tabla.' '.$feeder;									$FEED[$format_maquina.$format_feeder][$hora] = array(					'id_stat' => $id_stat,					'id'=>$id,					'maquina'=>$maquina,					'error'=>$error,					'inspeccion'=>$inspeccion,					'ajuste'=>$ajuste,					'pickups'=>$pickups,					'rate'=>$rate				); 				$LASTID[$format_maquina.$format_feeder] = $id;					$existen_datas	= true;			}		}				if($existen_datas) {			$ordenar = array();						foreach($FEED as $key_feeder => $arr_data) {				$error_array = array();				$horas_array = array();				$inspeccion_array = array();				// Ordeno DATAS por hora				ksort($arr_data);								$ultimo_feeder = "";				$sum_error_reset = 0;				$sum_pick_reset = 0 ;								$last_pick = 0;				$last_point = 0;								foreach($arr_data as $arr_hora => $feed_data) {					$horas_array[] = "'".$arr_hora."'";					if($feed_data['ajuste']) {						$error_array[] = revision($feed_data['error']);								} else {						$error_array[] = $feed_data['error'];												}										if($feed_data['inspeccion']) {						$inspeccion_array[] = $feed_data['error'];						} else {						$inspeccion_array[] = 'null';						}										// Si el error es menor al ultimo punto...					if($feed_data['error']<$last_point){							if($sum_error_reset == 0) { 								// Primer reset...							$sum_error_reset = $last_point;							$sum_pick_reset = $last_pick;															} else {													$sum_error_reset += $last_point;							$sum_pick_reset += $last_pick;							}					} 															// Seteo el error actual.					$last_point= $feed_data['error'];					$last_pick= $feed_data['pickups'];					$ultimo_feeder = $feed_data;					$ultimo_feeder['sum_reset'] = $sum_error_reset;					$ultimo_feeder['sum_pick'] = $sum_pick_reset;				}			}												$ultimo_feeder['sum_reset'] = $ultimo_feeder['sum_reset'] + $last_point;			$ultimo_feeder['sum_pick'] = $ultimo_feeder['sum_pick'] + $last_pick;			$real_rate = percentage($ultimo_feeder['sum_reset'],$ultimo_feeder['sum_pick'],2);											// Se calculan pickups y rates del ultimo estado del feeder.			$tot_pick = $ultimo_feeder['pickups'];			$tot_rate = $ultimo_feeder['rate'];			$ultimos_errores = array_slice($error_array, -4, 4, true);			$critico = 0;			$critico_count = 1;			$estable_count = 1;			// Realizo un chequeo de los ultimos cuatro errores, para verificar la variacion. Si es mucha, el feeder se encuentra critico. 			foreach($ultimos_errores as $lerr) {				if($critico==0) {					$critico = revision_number($lerr);				} else {					if($lerr > $critico) {							$critico_count++;						$critico = revision_number($lerr);							$estable_count = 1;											} elseif($lerr==$critico) {						$estable_count++;					}				}			}									$script = "loadFeeder('".$ultimo_feeder["id_stat"]."','".$ultimo_feeder["id"]."','".$key_feeder."',[".join($error_array,",")."],[".join($horas_array,',')."],[".join($inspeccion_array,',')."],'".$ultimo_feeder['sum_pick']."','".$real_rate."',".$ultimo_feeder['sum_reset'].",".$critico_count.",".$estable_count."); \n	";							$critico = 0;						$feedinfo = array(				'script'=> $script,				'hora'=>$horas_array,				'inspeccion'=>$inspeccion_array,				'error'=>$error_array			);			return $feedinfo;				}	}		function revision_number($point="") {		$num = 0;		if(!is_numeric($point)) {			preg_match('/y:([0-9]+),/', $point, $n);			$num = $n[1];		} else {			$num = $point;		}		return $num;	}		function percentage($val1, $val2, $precision) {		$res = round( ($val1 / $val2) * 100, $precision );				return $res;	}	function revision($error="") {		$mark = '{ 			y:'.$error.',  			marker: {				lineWidth : 3,				symbol: "circle",				fillColor: "#b2ddff",				lineColor: "#0090ff",				radius: 6			}		}';		return $mark;	}*/?>